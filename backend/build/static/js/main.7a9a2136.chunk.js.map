{"version":3,"sources":["store/types.js","services/userService.js","store/user/userActions.js","services/wikitubeService.js","store/videos/videosActions.js","cmps/SearchInput/SearchInput.cmp.js","cmps/AppHeader/AppHeader.cmp.js","store/theme/themeActions.js","cmps/VideosCards/VideosCards.cmp.js","cmps/VideoPlayer/VideoPlayer.cmp.js","cmps/WikipediaPreview/WikipediaPreview.cmp.js","cmps/WikipediaContainer/WikipediaContainer.cmp.js","cmps/HistoryPreview/HistoryPreview.cmp.js","cmps/HistoryList/HistoryList.cmp.js","pages/HomePage/HomePage.cmp.js","cmps/FormInput/FormInput.cmp.js","cmps/SignIn/SignIn.cmp.js","cmps/SignUp/SignUp.cmp.js","pages/LoginAndSignupPage/LoginAndSignupPage.cmp.js","App.js","serviceWorker.js","store/videos/videosReducer.js","store/theme/themeReducer.js","store/user/userReducer.js","store/rootReducer.js","store/store.js","index.js"],"names":["types","USER_INPUT_SEARCH","USER_SELECTED_VIDEO","FETCH_WIKIPEDIA_TERM","SELECT_LIGHT_THEME","SELECT_DARK_THEME","SELECT_BLUE_THEME","USER_SIGNUP","USER_LOGIN","USER_LOGOUT","SAVE_USER_SEARCH_TERM","axios","Axios","create","withCredentials","saveUser","handleUserLogin","saveUserSearch","handleLogout","post","_getUrl","then","res","data","catch","err","console","log","user","a","ops","term","id","fetchData","payload","type","YOUTUBE_API","fetchTopYoutubeVideos","fetchWikipediaTerm","query","get","handleUserInputYouTube","input","dispatch","wikitubeService","fetchTop5","connect","setUserSearch","handleUserSearchTerm","userService","updatedUser","useState","userInput","setUserInput","handleSubmit","event","preventDefault","Form","inline","onSubmit","FormControl","onChange","e","target","value","placeholder","className","Button","onClick","variant","themeReducer","userReducer","selectedLight","lightTheme","selectedDark","darkTheme","selectedBlue","blueTheme","currentUser","isLight","selectLightTheme","isDark","selectDarkTheme","isBlue","selectBlueTheme","userLogout","logout","logOutUser","Navbar","bg","expand","to","Brand","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","Text","style","cursor","displayName","width","borderRadius","src","_id","alt","videoSelected","userSelectVideo","item","Card","text","Img","snippet","thumbnails","medium","url","Body","Title","videoId","videosReducer","height","wikipediaTerm","length","splice","WikipediaContainer","HistoryPreview","userSearches","searchTerms","reverse","filter","idx","map","search","key","videos","fetchVideo","useEffect","items","FormInput","handleChange","label","otherProps","SignIn","state","email","password","props","cogoToast","warn","name","setState","this","required","React","Component","userSignin","handleUserSigning","SignUp","confirmPassword","saveUserToDB","userRegistered","success","history","push","Error","Alert","withRouter","userSignup","handleUserSignup","LoginAndSignupPage","exact","path","component","HomePage","render","Boolean","window","location","hostname","match","INITIAL_STATE","persistConfig","storage","whitelist","rootReducer","combineReducers","action","persistReducer","middlewares","thunk","store","createStore","applyMiddleware","persist","persistStore","ReactDOM","persistor","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a9a2136.chunk.js","sourcesContent":["const types = {\r\n  USER_INPUT_SEARCH: \"USER_INPUT_SEARCH\",\r\n  USER_SELECTED_VIDEO: \"USER_SELECTED_VIDEO\",\r\n  FETCH_WIKIPEDIA_TERM: \"FETCH_WIKIPEDIA_TERM\",\r\n  SELECT_LIGHT_THEME: \"SELECT_LIGHT_THEME\",\r\n  SELECT_DARK_THEME: \"SELECT_DARK_THEME\",\r\n  SELECT_BLUE_THEME: \"SELECT_BLUE_THEME\",\r\n  USER_SIGNUP: \"USER_SIGNUP\",\r\n  USER_LOGIN: \"USER_LOGIN\",\r\n  USER_LOGOUT: \"USER_LOGOUT\",\r\n  SAVE_USER_SEARCH_TERM: \"SAVE_USER_SEARCH_TERM\"\r\n};\r\nexport default types;\r\n","import Axios from \"axios\";\r\nvar axios = Axios.create({\r\n  withCredentials: true\r\n});\r\n\r\nexport default {\r\n  saveUser,\r\n  handleUserLogin,\r\n  saveUserSearch,\r\n  handleLogout\r\n};\r\n\r\nasync function handleUserLogin(user) {\r\n  try {\r\n    const res = await axios.post(`${_getUrl()}login`, user);\r\n    if (res) return res.data;\r\n  } catch (error) {\r\n    return console.log(\"Couldnt find the user\", error);\r\n  }\r\n}\r\n\r\nasync function saveUser(user) {\r\n  try {\r\n    const res = await axios.post(`${_getUrl()}signup`, user);\r\n    return res.data.ops[0];\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function saveUserSearch(term) {\r\n  try {\r\n    const res = await axios.post(`${_getUrl()}search`, term);\r\n    return res.data;\r\n  } catch (error) {\r\n    return console.log(\"cant save search term\", error);\r\n  }\r\n}\r\n\r\nfunction handleLogout() {\r\n  axios\r\n    .post(`${_getUrl()}logout`)\r\n    .then(res => res.data)\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nfunction _getUrl(id = \"\") {\r\n  const BASE_URL =\r\n    process.env.NODE_ENV !== \"development\" ? \"/user\" : \"//localhost:3000/user\";\r\n  return `${BASE_URL}/${id}`;\r\n}\r\n","import types from \"../types\";\r\nimport userService from \"../../services/userService\";\r\n\r\nconst fetchData = (payload, type) => {\r\n  return {\r\n    payload,\r\n    type\r\n  };\r\n};\r\n\r\nexport const handleUserSignup = user => {\r\n  return async dispatch => {\r\n    try {\r\n      const userSignup = await userService.saveUser(user);\r\n      dispatch(fetchData(userSignup, types.USER_SIGNUP));\r\n      return userSignup;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n};\r\n\r\nexport const handleUserSigning = user => {\r\n  return async dispatch => {\r\n    try {\r\n      const userSignin = await userService.handleUserLogin(user);\r\n      dispatch(fetchData(userSignin, types.USER_LOGIN));\r\n      return userSignin;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n};\r\n\r\nexport const handleUserSearchTerm = term => {\r\n  return async dispatch => {\r\n    try {\r\n      const updatedUser = await userService.saveUserSearch(term);\r\n      dispatch(fetchData(updatedUser, types.SAVE_USER_SEARCH_TERM));\r\n      return updatedUser;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n};\r\n\r\nexport const handleUserLogout = () => {\r\n  return async dispatch => {\r\n    try {\r\n      const logOutUser = await userService.handleLogout();\r\n      dispatch(fetchData(logOutUser, types.USER_LOGOUT));\r\n      return logOutUser;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst YOUTUBE_API = \"AIzaSyDYdl0Xss7i4n05E450Uc7oNef1boWE_f8\";\r\n\r\nexport default {\r\n  fetchTopYoutubeVideos,\r\n  fetchWikipediaTerm\r\n};\r\n\r\nasync function fetchTopYoutubeVideos(query = \"imagine dragons\") {\r\n  try {\r\n    const res = await axios.get(\r\n      `https://www.googleapis.com/youtube/v3/search?part=snippet&videoEmbeddable=true&type=video&key=${YOUTUBE_API}&q=${query}`\r\n    );\r\n    return res.data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n}\r\n\r\nasync function fetchWikipediaTerm(term = \"imagine dragons\") {\r\n  try {\r\n    const res = await axios.get(\r\n      `https://en.wikipedia.org/w/api.php?&origin=*&action=opensearch&search=${term}&limit=5`\r\n    );\r\n    return res.data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n}\r\n","import types from \"../types\";\r\nimport wikitubeService from \"../../services/wikitubeService\";\r\n\r\nconst fetchData = (payload, type) => {\r\n  return {\r\n    payload,\r\n    type\r\n  };\r\n};\r\n\r\nexport const handleUserInputYouTube = input => {\r\n  return async dispatch => {\r\n    try {\r\n      const fetchTop5 = await wikitubeService.fetchTopYoutubeVideos(input);\r\n      dispatch(fetchData(fetchTop5, types.USER_INPUT_SEARCH));\r\n      return fetchTop5;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n};\r\n\r\nexport const userSelectVideo = id => ({\r\n  type: types.USER_SELECTED_VIDEO,\r\n  payload: id\r\n});\r\n\r\nexport const fetchWikipediaTerm = term => {\r\n  return async dispatch => {\r\n    try {\r\n      const fetchWikipediaTerm = await wikitubeService.fetchWikipediaTerm(term);\r\n      dispatch(fetchData(fetchWikipediaTerm, types.FETCH_WIKIPEDIA_TERM));\r\n      return fetchWikipediaTerm;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, FormControl } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  handleUserInputYouTube,\r\n  fetchWikipediaTerm\r\n} from \"../../store/videos/videosActions\";\r\nimport { handleUserSearchTerm } from \"../../store/user/userActions\";\r\n\r\nconst SearchInput = ({\r\n  setUserSearch,\r\n  fetchWikipediaTerm,\r\n  handleUserSearchTerm\r\n}) => {\r\n  const [userInput, setUserInput] = useState(\"\");\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    console.log(userInput);\r\n    setUserSearch(userInput);\r\n    fetchWikipediaTerm(userInput);\r\n    handleUserSearchTerm({ term: userInput });\r\n    setUserInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <Form inline onSubmit={handleSubmit}>\r\n      <FormControl\r\n        onChange={e => setUserInput(e.target.value)}\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        className=\"mr-sm-2\"\r\n        value={userInput}\r\n      />\r\n      <Button onClick={handleSubmit} variant=\"outline-success\">\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setUserSearch: input => dispatch(handleUserInputYouTube(input)),\r\n  fetchWikipediaTerm: term => dispatch(fetchWikipediaTerm(term)),\r\n  handleUserSearchTerm: term => dispatch(handleUserSearchTerm(term))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SearchInput);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  selectLightTheme,\r\n  selectDarkTheme,\r\n  selectBlueTheme\r\n} from \"../../store/theme/themeActions\";\r\nimport { handleUserLogout } from \"../../store/user/userActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport SearchInput from \"../SearchInput/SearchInput.cmp\";\r\n\r\nconst AppHeader = ({\r\n  isBlue,\r\n  isDark,\r\n  isLight,\r\n  selectedLight,\r\n  selectedDark,\r\n  selectedBlue,\r\n  currentUser,\r\n  userLogout\r\n}) => {\r\n  const handleLightTheme = () => {\r\n    isBlue(false);\r\n    isDark(false);\r\n    isLight(true);\r\n  };\r\n\r\n  const handleDarkTheme = () => {\r\n    isBlue(false);\r\n    isLight(false);\r\n    isDark(true);\r\n  };\r\n\r\n  const handleBlueTheme = () => {\r\n    isDark(false);\r\n    isLight(false);\r\n    isBlue(true);\r\n  };\r\n\r\n  const themeColor = () => {\r\n    if (selectedDark) return \"dark\";\r\n    if (selectedLight) return \"light\";\r\n    if (selectedBlue) return \"primary\";\r\n  };\r\n\r\n  return (\r\n    <Navbar\r\n      bg={themeColor()}\r\n      expand=\"lg\"\r\n      variant={selectedBlue || selectedDark ? \"dark\" : \"light\"}\r\n    >\r\n      <Link to=\"/\">\r\n        <Navbar.Brand>WikiTube</Navbar.Brand>\r\n      </Link>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <NavDropdown title=\"Theme\" id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item onClick={handleLightTheme}>\r\n              Light Theme\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Item onClick={handleDarkTheme}>\r\n              Dark Theme\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Item onClick={handleBlueTheme}>\r\n              Blue Theme\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n          {currentUser ? (\r\n            <Navbar.Text>\r\n              <div style={{ cursor: \"pointer\" }} onClick={() => userLogout(\"\")}>\r\n                Logout, {currentUser.displayName}{\" \"}\r\n                <img\r\n                  style={{ width: \"25px\", borderRadius: \"50px\" }}\r\n                  src={`https://i.pravatar.cc/150?u=${currentUser._id}`}\r\n                  alt=\"Profile\"\r\n                />\r\n              </div>\r\n            </Navbar.Text>\r\n          ) : (\r\n            <Navbar.Text>\r\n              <Link to=\"/signin\">Login</Link>\r\n            </Navbar.Text>\r\n          )}\r\n        </Nav>\r\n        <SearchInput />\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  isLight: lightTheme => dispatch(selectLightTheme(lightTheme)),\r\n  isDark: darkTheme => dispatch(selectDarkTheme(darkTheme)),\r\n  isBlue: blueTheme => dispatch(selectBlueTheme(blueTheme)),\r\n  userLogout: logout => dispatch(handleUserLogout(logout))\r\n});\r\n\r\nconst mapStateToProps = ({ themeReducer, userReducer }) => ({\r\n  selectedLight: themeReducer.lightTheme,\r\n  selectedDark: themeReducer.darkTheme,\r\n  selectedBlue: themeReducer.blueTheme,\r\n  currentUser: userReducer.currentUser\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AppHeader);\r\n","import types from \"../types\";\r\n\r\nexport const selectLightTheme = isLight => ({\r\n  type: types.SELECT_LIGHT_THEME,\r\n  payload: isLight\r\n});\r\n\r\nexport const selectDarkTheme = isDark => ({\r\n  type: types.SELECT_DARK_THEME,\r\n  payload: isDark\r\n});\r\n\r\nexport const selectBlueTheme = isBlue => ({\r\n  type: types.SELECT_BLUE_THEME,\r\n  payload: isBlue\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { userSelectVideo } from \"../../store/videos/videosActions\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport \"./videocards.styles.scss\";\r\n\r\nconst VideosCards = ({\r\n  item,\r\n  videoSelected,\r\n  selectedLight,\r\n  selectedDark,\r\n  selectedBlue\r\n}) => {\r\n  const themeColor = () => {\r\n    if (selectedLight) return \"white\";\r\n    if (selectedDark) return \"dark\";\r\n    if (selectedBlue) return \"primary\";\r\n  };\r\n  return (\r\n    <div>\r\n      <Card\r\n        bg={themeColor()}\r\n        text={selectedDark || selectedBlue ? \"white\" : \"dark\"}\r\n        style={{ width: \"20rem\" }}\r\n        className=\"card\"\r\n      >\r\n        <Card.Img variant=\"top\" src={item.snippet.thumbnails.medium.url} />\r\n        <Card.Body>\r\n          <Card.Title>{item.snippet.title}</Card.Title>\r\n          <Button\r\n            onClick={() => videoSelected(item.id.videoId)}\r\n            variant={selectedDark || selectedBlue ? \"light\" : \"dark\"}\r\n          >\r\n            Watch Video\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  videoSelected: id => dispatch(userSelectVideo(id))\r\n});\r\n\r\nconst mapStateToProps = ({ themeReducer }) => ({\r\n  selectedLight: themeReducer.lightTheme,\r\n  selectedDark: themeReducer.darkTheme,\r\n  selectedBlue: themeReducer.blueTheme\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VideosCards);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst VideoPlayer = ({ videoId }) => {\r\n  return (\r\n    <div>\r\n      <iframe\r\n        title=\"video\"\r\n        width=\"420\"\r\n        height=\"315\"\r\n        src={`https://www.youtube.com/embed/${\r\n          videoId ? videoId : \"7wtfhZwyrcc\"\r\n        }`}\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ videosReducer }) => ({\r\n  videoId: videosReducer.videoId\r\n});\r\n\r\nexport default connect(mapStateToProps)(VideoPlayer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst WikipediaPreview = ({ wikipediaTerm }) => {\r\n  return (\r\n    <div className=\"wikipedia-term\">\r\n      {wikipediaTerm.length && (\r\n        <>\r\n          <h1>{wikipediaTerm[1].splice(0, 1)}</h1>\r\n          <p>{wikipediaTerm[2].splice(0, 1)}</p>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ videosReducer }) => ({\r\n  wikipediaTerm: videosReducer.wikipediaTerm\r\n});\r\n\r\nexport default connect(mapStateToProps)(WikipediaPreview);\r\n","import React from \"react\";\r\nimport VideoPlayer from \"../VideoPlayer/VideoPlayer.cmp\";\r\nimport WikipediaPreview from \"../WikipediaPreview/WikipediaPreview.cmp\";\r\n\r\nconst WikipediaContainer = () => {\r\n  return (\r\n    <div className=\"wikitube-container\" style={{ width: \"35%\" }}>\r\n      <VideoPlayer />\r\n      <WikipediaPreview />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WikipediaContainer;\r\n","import React from \"react\";\r\n\r\nconst HistoryPreview = ({ term }) => {\r\n  return (\r\n    <>\r\n      <h3> {term} &nbsp;</h3>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HistoryPreview;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./historylist.styes.scss\";\r\nimport HistoryPreview from \"../HistoryPreview/HistoryPreview.cmp\";\r\n\r\nconst HistoryList = ({ userSearches }) => {\r\n  return (\r\n    <div className=\"history-container\">\r\n      <h2>Last search's:</h2>\r\n      <div className=\"last-search\">\r\n        {userSearches ? (\r\n          userSearches.searchTerms\r\n            .reverse()\r\n            .filter((item, idx) => idx < 3)\r\n            .map(search => (\r\n              <HistoryPreview term={search.term} key={search._id} />\r\n            ))\r\n        ) : (\r\n          <h4>To watch your history searches please login</h4>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ userReducer }) => ({\r\n  userSearches: userReducer.currentUser\r\n});\r\n\r\nexport default connect(mapStateToProps)(HistoryList);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchWikipediaTerm,\r\n  handleUserInputYouTube\r\n} from \"../../store/videos/videosActions\";\r\nimport VideosCards from \"../../cmps/VideosCards/VideosCards.cmp\";\r\nimport WikipediaContainer from \"../../cmps/WikipediaContainer/WikipediaContainer.cmp\";\r\n\r\nimport \"./homepage.styles.scss\";\r\nimport HistoryList from \"../../cmps/HistoryList/HistoryList.cmp\";\r\n\r\nconst HomePage = ({ videos, fetchVideo, fetchWikipediaTerm }) => {\r\n  useEffect(() => {\r\n    fetchVideo();\r\n    fetchWikipediaTerm();\r\n  }, [fetchVideo, fetchWikipediaTerm]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"home-page container\">\r\n        <div className=\"cards-container\">\r\n          {videos.items ? (\r\n            videos.items.map(item => (\r\n              <VideosCards item={item} key={item.id.videoId} />\r\n            ))\r\n          ) : (\r\n            <p>No Search!</p>\r\n          )}\r\n        </div>\r\n        <WikipediaContainer />\r\n      </div>\r\n      <div className=\"history-container container\">\r\n        <HistoryList />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ videosReducer, themeReducer }) => ({\r\n  videos: videosReducer.videos\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchVideo: () => dispatch(fetchWikipediaTerm()),\r\n  fetchWikipediaTerm: () => dispatch(handleUserInputYouTube())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HomePage);\r\n","import React from \"react\";\r\nimport \"./forminput.styles.scss\";\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => {\r\n  return (\r\n    <div className=\"group\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-input\"\r\n        onChange={handleChange}\r\n        {...otherProps}\r\n      />\r\n      {label ? (\r\n        <label\r\n          className={`${\r\n            otherProps.value.length ? \"shrink\" : \"\"\r\n          } form-input-label`}\r\n        >\r\n          {label}\r\n        </label>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleUserSigning } from \"../../store/user/userActions\";\r\nimport FormInput from \"../FormInput/FormInput.cmp\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport cogoToast from \"cogo-toast\";\r\nimport \"./signin.styles.scss\";\r\n\r\nclass SignIn extends React.Component {\r\n  state = { email: \"\", password: \"\" };\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const { handleUserLogin } = this.props;\r\n\r\n    try {\r\n      const userAuth = await handleUserLogin(this.state);\r\n      if (!userAuth) return cogoToast.warn(\"Password or email are not match!\");\r\n    } catch (error) {\r\n      console.log(\"Error\", error);\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { value, name } = event.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"sign-in\">\r\n        <h2>I already have an account</h2>\r\n        <span>Sign in with your email and password</span>\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          <FormInput\r\n            name=\"email\"\r\n            type=\"email\"\r\n            label=\"email\"\r\n            handleChange={this.handleChange}\r\n            value={this.state.email}\r\n            required\r\n          />\r\n          <FormInput\r\n            name=\"password\"\r\n            type=\"password\"\r\n            label=\"password\"\r\n            handleChange={this.handleChange}\r\n            value={this.state.password}\r\n            required\r\n          />\r\n          <div className=\"buttons\">\r\n            <Button type=\"submit\">SIGN IN</Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleUserLogin: user => dispatch(handleUserSigning(user))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FormInput from \"../FormInput/FormInput.cmp\";\r\nimport { handleUserSignup } from \"../../store/user/userActions\";\r\nimport { Button, Alert } from \"react-bootstrap\";\r\nimport cogoToast from \"cogo-toast\";\r\n\r\nimport \"./signup.styles.scss\";\r\n\r\nclass SignUp extends Component {\r\n  state = { displayName: \"\", email: \"\", password: \"\", confirmPassword: \"\" };\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const { password, confirmPassword } = this.state;\r\n    const { saveUserToDB } = this.props;\r\n    if (password !== confirmPassword)\r\n      return cogoToast.warn(\"Passwords doesn't match!\");\r\n    try {\r\n      const userRegistered = await saveUserToDB(this.state);\r\n      if (userRegistered) {\r\n        cogoToast.success(\"Successfully Registered!\");\r\n        return this.props.history.push(\"/\");\r\n      }\r\n      if (!userRegistered) throw Error;\r\n    } catch (error) {\r\n      cogoToast.warn(\"Error occurred, email already used\");\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { displayName, email, password, confirmPassword } = this.state;\r\n    return (\r\n      <div className=\"sign-up\">\r\n        <h2 className=\"title\">I do not have an account</h2>\r\n        <span>Sign up with your email and password</span>\r\n        <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\r\n          <FormInput\r\n            type=\"text\"\r\n            onChange={this.handleChange}\r\n            value={displayName}\r\n            name=\"displayName\"\r\n            label=\"Display Name\"\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"email\"\r\n            onChange={this.handleChange}\r\n            value={email}\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"password\"\r\n            onChange={this.handleChange}\r\n            value={password}\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"password\"\r\n            onChange={this.handleChange}\r\n            value={confirmPassword}\r\n            name=\"confirmPassword\"\r\n            label=\"Confirm Password\"\r\n            required\r\n          />\r\n          {password !== confirmPassword ? (\r\n            <Alert variant=\"danger\">The passwords doesn't match!</Alert>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Button type=\"submit\">SIGN UP</Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  saveUserToDB: user => dispatch(handleUserSignup(user))\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    null,\r\n    mapDispatchToProps\r\n  )(SignUp)\r\n);\r\n","import React from \"react\";\r\n\r\nimport SignIn from \"../../cmps/SignIn/SignIn.cmp\";\r\nimport SignUp from \"../../cmps/SignUp/SignUp.cmp\";\r\n\r\nimport \"./signinandsignup.styles.scss\";\r\n\r\nconst LoginAndSignupPage = () => {\r\n  return (\r\n    <div className=\"sign-in-and-sign-up\">\r\n      <SignIn />\r\n      <SignUp />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginAndSignupPage;\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport AppHeader from \"./cmps/AppHeader/AppHeader.cmp\";\nimport HomePage from \"./pages/HomePage/HomePage.cmp\";\nimport LoginAndSignupPage from \"./pages/LoginAndSignupPage/LoginAndSignupPage.cmp\";\n\nimport \"./App.css\";\n\nfunction App({ selectedBlue, selectedDark, selectedLight, currentUser }) {\n  const themeColor = () => {\n    if (selectedBlue) return \"blue-theme\";\n    if (selectedDark) return \"dark-theme\";\n    if (selectedLight) return \"light-theme\";\n  };\n\n  return (\n    <div className={themeColor()}>\n      <Router>\n        <AppHeader />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route\n            exact\n            path=\"/signin\"\n            render={() =>\n              currentUser ? <Redirect to=\"/\" /> : <LoginAndSignupPage />\n            }\n          />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ themeReducer, userReducer }) => ({\n  selectedLight: themeReducer.lightTheme,\n  selectedDark: themeReducer.darkTheme,\n  selectedBlue: themeReducer.blueTheme,\n  currentUser: userReducer.currentUser\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import types from \"../types\";\r\n\r\nconst INITIAL_STATE = {\r\n  videos: [],\r\n  videoId: \"\",\r\n  wikipediaTerm: []\r\n};\r\n\r\nexport default function videosReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case types.USER_INPUT_SEARCH:\r\n      return {\r\n        ...state,\r\n        videos: action.payload\r\n      };\r\n    case types.USER_SELECTED_VIDEO:\r\n      return {\r\n        ...state,\r\n        videoId: action.payload\r\n      };\r\n    case types.FETCH_WIKIPEDIA_TERM:\r\n      return {\r\n        ...state,\r\n        wikipediaTerm: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import types from \"../types\";\r\n\r\nconst INITIAL_STATE = {\r\n  darkTheme: false,\r\n  lightTheme: false,\r\n  blueTheme: false\r\n};\r\n\r\nexport default function themeReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case types.SELECT_LIGHT_THEME:\r\n      return {\r\n        ...state,\r\n        lightTheme: action.payload\r\n      };\r\n    case types.SELECT_DARK_THEME:\r\n      return {\r\n        ...state,\r\n        darkTheme: action.payload\r\n      };\r\n    case types.SELECT_BLUE_THEME:\r\n      return {\r\n        ...state,\r\n        blueTheme: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import types from \"../types\";\r\n\r\nconst INITIAL_STATE = {\r\n  currentUser: \"\"\r\n};\r\n\r\nexport default function videosReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case types.USER_SIGNUP:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload\r\n      };\r\n    case types.USER_LOGIN:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload\r\n      };\r\n    case types.USER_LOGOUT:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload\r\n      };\r\n    case types.SAVE_USER_SEARCH_TERM:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport videosReducer from \"./videos/videosReducer\";\r\nimport themeReducer from \"./theme/themeReducer\";\r\nimport userReducer from \"./user/userReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"userReducer\"]\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  videosReducer,\r\n  themeReducer,\r\n  userReducer\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport const persist = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport { store, persist } from \"./store/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persist}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}